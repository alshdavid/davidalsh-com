<% 
  meta = parseYaml(readFile('meta.yaml')) 
%>

<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../../_partials/meta'); -%>
  <%- includeStyle('./style.scss') %>
  <%- includeStyle('../../style.scss') %>
  <%  includeDir('./assets') %>
  <title>Blog - <%= meta.title %></title>
</head>

<body>
  <div class="content-max-width framed">
    <header>
      <nav>
        <div>
          <a href="/">Back home</a>
        </div>
        <p class="article-author">David Alsh</p>
      </nav>
      <div class="article-details">
        <div>
          <h1 class="article-title"><%- meta.title %></h1>
          <p class="article-subtitle"><%- meta.subtitle %></p>
        </div>
        <div>
          <p class="article-publish-date">Published<br class="for-desktop"> <%- meta.publish_date %></p>
        </div>
      </div>
      <img class="article-image" src="<%- meta.image %>" alt="<%- meta.image_alt %>">
    </header>

    <main lang="en" class="markdown">
      <%- renderMarkdown('./readme.md') %>
    </main>

    <footer>

    </footer>

    <script>
      window.addEventListener('DOMContentLoaded', async () => {
        const frameUrl = new URL('https://cdn.davidalsh.com/syntax-highlight-iframe')
        // const frameUrl = new URL('http://localhost:8081')
        const frames = []
        
        window.addEventListener('message', (ev) => {

          if (ev.origin !== frameUrl.origin) return
          if (ev.data.action === 'RESIZE') {
            const { identifier, height } = ev.data
            frames[identifier].style.height = height
          }
        })

        for (const codeBlock of document.querySelectorAll('pre code')) {
          for (const className of codeBlock.classList) {
            if (!className.startsWith('language-')) continue

            const preEl = codeBlock.parentElement
            const mdContainer = codeBlock.parentElement.parentElement
            
            const frame = document.createElement('iframe')
            frame.src = frameUrl.href
            frame.style.display = 'none'
            frame.style.border = 'none'
            frame.style.width = '100%'

            const identifier = frames.length
            frames.push(frame)

            const onload = new Promise(res => frame.onload = res)
            mdContainer.insertBefore(frame, preEl)
            await onload
            // await new Promise(r => setTimeout(r, 2000))

            preEl.style.display = 'none'
            frame.style.display = 'block'
            
            frame.contentWindow.postMessage({
              action: 'CONFIG',
              identifier,
              code: codeBlock.innerHTML,
              language: className.replace('language-', '')
            }, '*')

            break
          }
        }
      })
    </script>
  </div>
</body>
</html>
