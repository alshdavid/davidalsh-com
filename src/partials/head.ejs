<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<!-- <meta
  http-equiv="Content-Security-Policy"
  content="
    default-src 'self';
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://giscus.app;
    script-src 'self' https://giscus.app;
    font-src 'self' https://fonts.gstatic.com;
    img-src 'self' data:;
    frame-src 'self' https://giscus.app;
  " /> -->

  <!-- <script defer data-domain="davidalsh.com" src="https://plausible.davidalsh.com/js/script.js"></script> -->
<script>
  "use strict";
  document.addEventListener("DOMContentLoaded", (event) => {
    var a = window.location
      , r = window.document
      , o = r.currentScript
      , l = "https://plausible.davidalsh.com/api/event";
    function s(t, e) {
        t && console.warn("Ignoring Event: " + t),
        e && e.callback && e.callback()
    }
    function t(t, e) {
        if (/^localhost$|^127(\.[0-9]+){0,2}\.[0-9]+$|^\[::1?\]$/.test(a.hostname) || "file:" === a.protocol)
            return s("localhost", e);
        if ((window._phantom || window.__nightmare || window.navigator.webdriver || window.Cypress) && !window.__plausible)
            return s(null, e);
        try {
            if ("true" === window.localStorage.plausible_ignore)
                return s("localStorage flag", e)
        } catch (t) {}
        var i = {}
          , n = (i.n = t,
        i.u = a.href,
        i.d = "davidalsh.com",
        i.r = r.referrer || null,
        e && e.meta && (i.m = JSON.stringify(e.meta)),
        e && e.props && (i.p = e.props),
        new XMLHttpRequest);
        n.open("POST", l, !0),
        n.setRequestHeader("Content-Type", "text/plain"),
        n.send(JSON.stringify(i)),
        n.onreadystatechange = function() {
            4 === n.readyState && e && e.callback && e.callback({
                status: n.status
            })
        }
    }
    var e = window.plausible && window.plausible.q || [];
    window.plausible = t;
    for (var i, n = 0; n < e.length; n++)
        t.apply(this, e[n]);
    function p() {
        i !== a.pathname && (i = a.pathname,
        t("pageview"))
    }
    var c, u = window.history;
    u.pushState && (c = u.pushState,
    u.pushState = function() {
        c.apply(this, arguments),
        p()
    }
    ,
    window.addEventListener("popstate", p)),
    "prerender" === r.visibilityState ? r.addEventListener("visibilitychange", function() {
        i || "visible" !== r.visibilityState || p()
    }) : p()
});
</script>

<link data-favicon rel="icon" href="/assets/favicon.svg" />
<link data-favicon rel="apple-touch-icon" href="/assets/favicon.svg" />
<link data-favicon rel="mask-icon" href="/assets/favicon.svg" color="#000000" >

<meta name="theme-color" content="#ffffff" />

<% if (ctx.meta?.description) { %> 
  <meta name="description" content="<%- meta.description %>">
<% } %> 

<style>
  :root {
    --background-color-dark: #0d1116;
    --font-color-dark: #e1e1e1;

    /* --background-color-light: #fff;
    --font-color-light: #292929; */
  }

  /* @media (prefers-color-scheme: dark) { */
    html {
      background-color: var(--background-color-dark);
      color: var(--font-color-dark);
    }
  /* } */
/*   
  @media (prefers-color-scheme: light) {
    html {
      background-color: var(--background-color-light);
      color: var(--font-color-light);
    }
  } */
</style>

<meta property="og:url" content="<%- ctx.slug_full %>" />

<% 
  if (typeof meta !== 'undefined') for (let [meta_key, meta_value] of Object.entries(meta || {})) {
  if (typeof meta_value === "string") {
    meta_value = { key: meta_value }
  }
%>
  <meta property="og:<%- meta_key %>" content="<%- meta_value.key %>" />
  <% 
    if (meta_value.attributes) for (let [key, values] of Object.entries(meta_value.attributes)) {
      const file_meta = {}
      if (!Array.isArray(values)) values = [values]
      for (let value of values) {
        if (value instanceof util.moment )  { 
          value = value.toISOString()
        } 
        
        %><meta property="<%- meta.type.key %>:<%- key %>" content="<%- value %>" /><% 
      }

      if (values.length === 1 && values[0] instanceof util.moment) {
        index_meta.set(key + '_pretty', values[0].format('DD MMM YYYY'))
      }
      if (values.length === 1) {
        index_meta.set(key, values[0])
      } else {
        index_meta.set(key, values)
      }
      index_meta.set(meta_key, meta_value.key)
    } else {
      index_meta.set(meta_key, meta_value.key)
    }
  } 
%>

<% if (!ctx.meta?.title && ctx.title) { %>
    <meta property="og:title" content="<%- title %>" />
<% 
    index_meta.set('title', title)
  } 
%>

<% if (ctx.title) { %>
 <title>David Alsh - <%- title %></title>
<% } else { %>
 <title>David Alsh</title>
<% } %>

<% 
const style_src = await styles.add(paths.root + "/styles.scss")
const scripts_src = await scripts.add(paths.root + "/index.ts")
%>

<link rel="stylesheet" href="<%- style_src %>" />
<script src="<%- scripts_src %>" type="module" async></script>
