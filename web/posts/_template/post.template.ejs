<% 
  meta = parseYaml(readFile('meta.yaml'))
%>

<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../../_partials/meta'); -%>
  <title>Blog - <%= meta.title %></title>

  <meta property="og:url"                content="https://davidalsh.com/<%- relative_dirname() %>" />
  <meta property="og:type"               content="article" />
  <meta property="og:title"              content="<%- meta.title %>" />
  <meta property="og:description"        content="<%- meta.description %>" />
  <meta property="og:image"              content="https://davidalsh.com/<%- relative_dirname() %>/<%- meta.image %>" />
  
  <%- include('../../_partials/links'); -%>  
  <%- includeStyle('./style.scss') %>
  <%- includeStyle('../../style.scss', { fromVirtualPath: true }) %>
  <%  includeDir('./assets') %>
  <%- include('../../_partials/dark-mode'); -%>
</head>

<body class="page-article">
  <div class="content-max-width framed">
    <header>
      <nav>
        <div>
          <a href="/">Back home</a>
        </div>
        <div>
          <button class="toggle-dark-mode" onclick="toggleDarkMode()">Toggle Dark Mode</button>
        </div>
      </nav>
      <div class="article-details">
        <div>
          <h1 class="article-title"><%- escapeHtml(meta.title) %></h1>
          <p class="article-subtitle"><%- escapeHtml(meta.subtitle) %></p>
        </div>
        <div>
          <p class="article-publish-date">Published<br class="for-desktop"> <%- meta.publish_date %></p>
        </div>
      </div>
      <img class="article-image" src="<%- meta.image %>" alt="<%- meta.image_alt %>">
    </header>

    <main lang="en" class="markdown">
      <%- renderMarkdown('./readme.md') %>
    </main>

    <script type="module">
      (async () => {
        for (const el of document.querySelectorAll('embed[data-type="code"]')) {
          const src = el.src
          const content = await fetch(src).then(r => r.text())
          const template = document.createElement('template')
          template.innerHTML = content
          el.parentElement.parentElement.classList.add(el.parentElement.className)
          el.parentElement.parentElement.classList.add("line-numbers")
          el.replaceWith(template.content)
        }
      })()
    </script>
  </div>
</body>
</html>
