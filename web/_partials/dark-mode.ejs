<script type="module">
  const htmlElement = document.querySelector('html')  
  const ModeKey = 'color-scheme-override'
  const ColorScheme = {
    Light: 'light',
    Dark: 'dark',
  }
  
  let userOverride = window.localStorage.getItem(ModeKey)
  let systemPreffered = window.matchMedia('(prefers-color-scheme: dark)').matches ? ColorScheme.Dark : ColorScheme.Light
  let currentMode = systemPreffered

  function forceLight() {
    htmlElement.classList.remove(ColorScheme.Dark)
    htmlElement.classList.add(ColorScheme.Light)
    currentMode = ColorScheme.Light
    if (currentMode === systemPreffered) {
      window.localStorage.removeItem(ModeKey)
      userOverride = null
    }
    else {
      window.localStorage.setItem(ModeKey, ColorScheme.Light)
      userOverride = ColorScheme.Light
    }
    window.dispatchEvent(new CustomEvent('color-scheme-change', { detail: ColorScheme.Light }))
  }

  function forceDark() {
    htmlElement.classList.remove(ColorScheme.Light)
    htmlElement.classList.add(ColorScheme.Dark)
    currentMode = ColorScheme.Dark
    if (currentMode === systemPreffered) {
      window.localStorage.removeItem(ModeKey)
      userOverride = null
    }
    else {
      window.localStorage.setItem(ModeKey, ColorScheme.Dark)
      userOverride = ColorScheme.Dark
    }
    window.dispatchEvent(new CustomEvent('color-scheme-change', { detail: ColorScheme.Dark }))
  }

  function toggleDarkMode() {
    currentMode === ColorScheme.Light ? forceDark() : forceLight()
  }

  function render() {
    if (userOverride === ColorScheme.Dark) {
      forceDark()
    }
    else if (userOverride === ColorScheme.Light) {
      forceLight()
    }
    else if (systemPreffered === ColorScheme.Dark) {
      forceDark()
    }
    else {
      forceLight()
    }
  }
  
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', event => {
      systemPreffered = event.matches ? ColorScheme.Dark : ColorScheme.Light;
      render()
    });

  // Skip the inital transition
  document.documentElement.style.setProperty('--color-scheme-transistion-duration', '0ms');
  
  window.setTimeout(
    () => document.documentElement.style.removeProperty('--color-scheme-transistion-duration'), 0,
  )

  Object.defineProperty(window, 'currentColorScheme', { 
    get: () => currentMode, 
    set: () => console.error('Protected Property, Cannot Set'),
  })
  window.toggleDarkMode = toggleDarkMode
  render()
</script>